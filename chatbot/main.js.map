{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <h2>Chat Bot</h2>\\n        </div>\\n        <div class=\\\"col-lg-12\\\">\\n            <h3><a [href]=\\\"URL\\\">{{URL}}</a></h3>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container\\\" style=\\\"padding-top:2em;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group mx-sm-3 mb-2\\\">\\n                    <label for=\\\"sparkQlQuery\\\" class=\\\"sr-only\\\">Password</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"sparkQlQuery\\\" placeholder=\\\"sparkQl Query\\\" #userInput>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mb-2\\\" (click)=\\\"userInputListener(userInput)\\\">Retrive\\n                    Results</button>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-12\\\">\\n            <h5><b>User Input (Max 3 words):</b></h5>\\n            <p>{{userInput.value}}</p>\\n        </div>\\n        <div class=\\\"col-lg-12\\\">\\n            <h5><b>Generated Query (Sparkql):</b></h5>\\n            <p>{{sparkQlQuery}}</p>\\n        </div>\\n        <div class=\\\"col-lg-12\\\">\\n            <h5><b>Final Result (JSON):</b></h5>\\n            <p>{{sparkQlData | json}}</p>\\n        </div>\\n    </div>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public URL = 'http://dbpedia.org/sparql';\n  public sparkQlData;\n  public sparkQlQuery = '';\n  public userInput = '';\n  public argument: string[];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  userInputListener(userInput) {\n    const temp = userInput.value;\n    this.argument = temp.split(' ');\n    let argument1 = ' ';\n    let argument2 = ' ';\n    let argument3 = ' ';\n\n    if (this.argument[1]) {\n      argument2 = this.argument[1].toUpperCase();\n    }\n    if (this.argument[2]) {\n      argument3 = this.argument[2].toUpperCase();\n    }\n\n    if (this.argument[0]) {\n      argument1 = this.argument[0].toUpperCase();\n      // tslint:disable-next-line:max-line-length\n      this.sparkQlQuery = 'select ?s1 as ?c1, (bif:search_excerpt (bif:vector (\"' + argument1 + '\", \"' + argument2 + '\", \"' + argument3 + '\"), ?o1)) as ?c2, ?sc, ?rank, ?g where ' +\n        '{{{ select ?s1, (?sc * 3e-1) as ?sc, ?o1, (sql:rnk_scale (<LONG::IRI_RANK> (?s1))) as ?rank, ?g where { ' +\n        // tslint:disable-next-line:max-line-length\n        'quad map virtrdf:DefaultQuadMap{graph ?g { ?s1 ?s1textp ?o1 . ?o1 bif:contains  \"(' + argument1 + ' AND ' + argument2 + ' AND ' + argument3 + ')\" option (score ?sc) . }}}' +\n        'limit 1 offset 0 }}}';\n    }\n\n    console.log('Arguments: \\na:' + argument1 + ' b:' + argument2 + ' c:' + argument3);\n    this.sparkQlRequest(this.sparkQlQuery);\n  }\n\n  sparkQlRequest(sparkQlQuery) {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n\n    const params = new HttpParams()\n      .set('default-graph-uri', 'http://dbpedia.org')\n      .set('query', sparkQlQuery)\n      .set('format', 'application/json')\n      .set('CXML_redir_for_subjs', '121')\n      .set('CXML_redir_for_hrefs=', '')\n      .set('timeout', '30000')\n      .set('run', '+Run+Query+');\n\n    const httpOptions = {\n      headers: headers,\n      params: params\n    };\n\n    this.http.get(this.URL, httpOptions)\n      .subscribe(\n        data => {\n          console.log('GET Request is successful: ', data);\n          this.sparkQlData = data;\n        },\n        error => {\n          console.log('Error:', error);\n          this.sparkQlData = error;\n        }\n      );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}