{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,uEAAuE,kBAAkB,uLAAuL,KAAK,6HAA6H,uzBAAuzB,OAAO,iKAAiK,aAAa,yLAAyL,oSAAoS,mRAAmR,sBAAsB,oEAAoE,QAAQ,q+E;;;;;;;;;;;;;;;;;;;;;;;;;ACAtqE;AACiC;AAyB3E;IAyBE,sBACU,IAAgB;QAD1B,iBAOC;QANS,SAAI,GAAJ,IAAI,CAAY;QAxBnB,QAAG,GAAG,4BAA4B,CAAC;QAClC,mBAAc,GAAG,0BAA0B,CAAC;QAE7C,eAAU,GAAa,IAAI,CAAC;QAC5B,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QACf,UAAK,GAAG,EAAE,CAAC;QACX,yBAAoB,GAAG,EAAE,CAAC;QAI1B,iBAAY,GAAG,IAAI,CAAC;QACpB,gBAAW,GAAG,IAAI,CAAC;QAClB,aAAQ,GACd,4CAA4C;YAC5C,4DAA4D;YAC5D,uDAAuD;YACvD,6CAA6C;YAC7C,6CAA6C;YAC7C,6CAA6C;YAC7C,0CAA0C,CACzC;QAKD,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,sCAAsC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,wCAAiB,GAAjB,UAAkB,SAAS;QACzB,IAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,SAAS,CAAC;QACd,IAAI,SAAS,CAAC;QACd,IAAI,SAAS,CAAC;QAEd,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,IAAI,CAAC,KAAK,CAAC,EAAE;oBACX,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAC9B;qBAAM,IAAI,CAAC,GAAG,CAAC,IAAI,SAAS,EAAE;oBAC7B,SAAS,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAChD;aACF;YACD,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACpD,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACpD,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,oCAAoC,CAAC;gBAClD,IAAI,CAAC,WAAW,GAAG,oCAAoC,CAAC;gBACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;gBAC3D,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,GAAG,MAAM,CAAC;gBAC1G,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;aAClD;SACF;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,gEAAgE,CAAC;YAC9E,IAAI,CAAC,WAAW,GAAG,gEAAgE,CAAC;YACpF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACnE,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,oCAAoC,CAAC;gBAClD,IAAI,CAAC,WAAW,GAAG,oCAAoC,CAAC;gBACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;gBAC3D,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,GAAG,MAAM,CAAC;gBAC1G,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;aAClD;SACF;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,gEAAgE,CAAC;YAC9E,IAAI,CAAC,WAAW,GAAG,gEAAgE,CAAC;YACpF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,sCAAe,GAAf,UAAgB,SAAS,EAAE,SAAS,EAAE,SAAS;QAC7C,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,kBAAkB,GAAG,SAAS,GAAG,SAAS;YACvE,IAAI;cACF,sBAAsB,GAAG,SAAS,GAAG,SAAS;cAC9C,cAAc,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,KAAK;YACtD;;;oDAGwC;cACtC,GAAG,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAED,oCAAa,GAAb,UAAc,WAAW;QAAzB,iBA8BC;QA7BC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC9B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAE3C,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,mBAAmB,EAAE,oBAAoB,CAAC;aAC9C,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;aACzB,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;aACjC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC;aAClC,GAAG,CAAC,uBAAuB,EAAE,EAAE,CAAC;aAChC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;aACvB,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAE7B,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC;aACjC,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;YACjD,KAAI,CAAC,UAAU,GAAI,IAAiB,CAAC;YACrC,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC7B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACN,CAAC;IAED,wCAAiB,GAAjB,UAAkB,YAAY;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7C,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;oBAC3B,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;wBACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;qBAC3C;iBACF;qBAAM,IAAI,IAAI,CAAC,cAAc,KAAK,YAAY,EAAE;oBAC/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC1C,IAAI,CAAC,WAAW,GAAG,iCAAiC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBAC1E;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC3C;aACF;SACF;aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC3C;IACH,CAAC;IAjKU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCA2BgB,+DAAU;OA1Bf,YAAY,CAkKxB;IAAD,mBAAC;CAAA;AAlKwB;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BiC;AACjB;AACe;AACA;AACT;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"padding-bottom: 2em; padding-top: 2em;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <h2>Chat Bot</h2>\\n        </div>\\n        <div class=\\\"col-lg-12\\\">\\n            <h3><a [href]=\\\"URL\\\">{{URL}}</a></h3>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\" style=\\\"padding-bottom: 2em;\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group mx-sm-3 mb-2\\\">\\n                    <label for=\\\"sparkQlQuery\\\" class=\\\"sr-only\\\">Password</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"sparQlQuery\\\" placeholder=\\\"Heraklion areaCode ?x\\\"\\n                        #userInput>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mb-2\\\" (click)=\\\"userInputListener(userInput)\\\">Retrive\\n                    Results</button>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <h5><b>User Input:</b></h5>\\n                    <p>{{input}}</p>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <h5><b>Generated Query (SparQl):</b></h5>\\n                    <p>{{sparQlQuery}}</p>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <h5><b>Final Results (JSON):</b></h5>\\n                    <div *ngIf=\\\"sparQlData === null; else elseBlock\\\">\\n                        <p>No data</p>\\n                    </div>\\n                    <ng-template #elseBlock>\\n                        <div *ngFor=\\\"let result of finalResults\\\">\\n                            <div class=\\\"card bg-default mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n                                <img *ngIf=\\\"imageSection !== null\\\" class=\\\"card-img-top\\\" [src]=\\\"imageSection\\\" [alt]=\\\"finalQuestionResults\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title\\\">{{finalQuestionResults}}</h5>\\n                                    <p class=\\\"card-text\\\">{{result}}</p>\\n                                    <a *ngIf=\\\"wikiSection !== null\\\" [href]=\\\"wikiSection\\\" class=\\\"btn btn-primary\\\">Wikipedia\\n                                        Link</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <h5><b>Input Examples:</b></h5>\\n            <table class=\\\"table table-striped table-dark\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">#</th>\\n                        <th scope=\\\"col\\\">Input</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <th scope=\\\"row\\\">1</th>\\n                        <td>Heraklion areaCode ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">2</th>\\n                        <td>Albert Einstein award ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">3</th>\\n                        <td>Albert Einstein birthDate ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">4</th>\\n                        <td>Heraklion wikiPageID ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">5</th>\\n                        <td>Planet thumbnail ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">6</th>\\n                        <td>Planet wikiPageRevisionID ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">7</th>\\n                        <td>GEORGE (operating system) developer ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">8</th>\\n                        <td>GEORGE (operating system) status ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">9</th>\\n                        <td>United States language ?x</td>\\n                    </tr>\\n                    <tr>\\n                        <th scope=\\\"row\\\">10</th>\\n                        <td>United States governmentType ?x</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\ninterface JSONData {\n  head: {\n    link: string[];\n    vars: string[];\n  };\n  results: {\n    distinct: boolean;\n    ordered: boolean;\n    bindings: [{\n      x: {\n        type: string;\n        value: string;\n      };\n    }];\n  };\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public URL = 'https://dbpedia.org/sparql';\n  private propertiesJSON = './assets/properties.json';\n  private propertyMatching;\n  public sparQlData: JSONData = null;\n  public sparQlQuery = '';\n  public userInput = '';\n  public input = '';\n  public finalQuestionResults = '';\n  public finalResults: string[];\n  private searchArgument: string;\n  private argument: string[];\n  public imageSection = null;\n  public wikiSection = null;\n  private prefixes =\n    'PREFIX foaf: <http://xmlns.com/foaf/0.1/> ' +\n    'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ' +\n    'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ' +\n    'PREFIX dbo: <http://dbpedia.org/ontology/> ' +\n    'PREFIX dbp: <http://dbpedia.org/property/> ' +\n    'PREFIX dbr: <http://dbpedia.org/resource/> ' +\n    'PREFIX dct: <http://purl.org/dc/terms/> '\n    ;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.getJSON().subscribe(data => {\n      this.propertyMatching = data;\n      // console.log(this.propertyMatching);\n    });\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(this.propertiesJSON);\n  }\n\n  userInputListener(userInput) {\n    const temp = userInput.value;\n    this.argument = temp.split(' ');\n    let argument1;\n    let argument2;\n    let argument3;\n\n    if (this.argument.length > 3) {\n      for (let i = 0; i < this.argument.length - 2; i++) {\n        if (i === 0) {\n          argument1 = this.argument[i];\n        } else if (i > 0 && argument1) {\n          argument1 = argument1 + ' ' + this.argument[i];\n        }\n      }\n      argument2 = this.argument[this.argument.length - 2];\n      argument3 = this.argument[this.argument.length - 1];\n      if (argument3[0] !== '?') {\n        this.input = 'Last arguments should contain (?).';\n        this.sparQlQuery = 'Last arguments should contain (?).';\n        this.sparQlData = null;\n      } else {\n        this.input = argument1 + ' ' + argument2 + ' ' + argument3;\n        this.finalQuestionResults = argument2[0].toUpperCase() + argument2.slice(1) + ' of ' + argument1 + ' is ';\n        this.searchArgument = argument2;\n        this.sparQlGenerator(argument1, argument2, '?x');\n      }\n    } else if (this.argument.length < 3) {\n      this.input = 'Please insert a valid question such as, Heraklion areaCode ?x.';\n      this.sparQlQuery = 'Please insert a valid question such as, Heraklion areaCode ?x.';\n      this.sparQlData = null;\n    } else if (this.argument[0] && this.argument[1] && this.argument[2]) {\n      argument1 = this.argument[0];\n      argument2 = this.argument[1];\n      argument3 = this.argument[2];\n      if (argument3[0] !== '?') {\n        this.input = 'Last arguments should contain (?).';\n        this.sparQlQuery = 'Last arguments should contain (?).';\n        this.sparQlData = null;\n      } else {\n        this.input = argument1 + ' ' + argument2 + ' ' + argument3;\n        this.finalQuestionResults = argument2[0].toUpperCase() + argument2.slice(1) + ' of ' + argument1 + ' is ';\n        this.searchArgument = argument2;\n        this.sparQlGenerator(argument1, argument2, '?x');\n      }\n    } else {\n      this.input = 'Please insert a valid question such as, Heraklion areaCode ?x.';\n      this.sparQlQuery = 'Please insert a valid question such as, Heraklion areaCode ?x.';\n      this.sparQlData = null;\n    }\n  }\n\n  sparQlGenerator(argument1, argument2, argument3) {\n    const sparQl = this.prefixes + 'SELECT distinct ' + argument3 + ' WHERE ' +\n      '{ '\n      + '?result rdfs:label \"' + argument1 + '\"@en . '\n      + '?result dbo:' + argument2 + ' ' + argument3 + ' . '\n      /*    + 'FILTER(lang(?x)=\"en\" || '\n            + 'datatype(?x) = xsd:string || '\n            + 'datatype(?x) = xsd:integer || '\n            + 'datatype(?x) = xsd:anyURI) ' */\n      + '}';\n\n    this.sparQlQuery = sparQl;\n    this.sparQlRequest(sparQl);\n  }\n\n  sparQlRequest(sparQlQuery) {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n\n    const params = new HttpParams()\n      .set('default-graph-uri', 'http://dbpedia.org')\n      .set('query', sparQlQuery)\n      .set('format', 'application/json')\n      .set('CXML_redir_for_subjs', '121')\n      .set('CXML_redir_for_hrefs=', '')\n      .set('timeout', '30000')\n      .set('run', '+Run+Query+');\n\n    const httpOptions = {\n      headers: headers,\n      params: params\n    };\n\n    this.http.get(this.URL, httpOptions)\n      .subscribe(\n        data => {\n          console.log('GET Request is successful: ', data);\n          this.sparQlData = (data as JSONData);\n          this.dataVisualization(this.sparQlData);\n        },\n        error => {\n          console.log('Error:', error);\n          this.sparQlData = error;\n        }\n      );\n  }\n\n  dataVisualization(receivedData) {\n    this.finalResults = new Array();\n    this.imageSection = null;\n    this.wikiSection = null;\n    const result = receivedData.results.bindings;\n    if (result.length > 1) {\n      for (let i = 0; i < result.length; i++) {\n        if (result[i].x['xml:lang']) {\n          if (result[i].x['xml:lang'] === 'en') {\n            this.finalResults.push(result[i].x.value);\n          }\n        } else if (this.searchArgument === 'wikiPageID') {\n          this.finalResults.push(result[0].x.value);\n          this.wikiSection = 'http://en.wikipedia.org/?curid=' + result[0].x.value;\n        } else {\n          this.finalResults.push(result[i].x.value);\n        }\n      }\n    } else if (result[0].x.value.includes('.jpg')) {\n      this.finalResults.push(result[0].x.value);\n      this.imageSection = result[0].x.value;\n    } else {\n      this.finalResults.push(result[0].x.value);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}